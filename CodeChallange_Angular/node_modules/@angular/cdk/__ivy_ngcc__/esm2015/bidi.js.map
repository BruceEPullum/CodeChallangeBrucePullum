{"version":3,"file":"bidi.js","sources":["../../../src/cdk/bidi/dir-document-token.ts","../../../src/cdk/bidi/directionality.ts","../../../src/cdk/bidi/dir.ts","../../../src/cdk/bidi/bidi-module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {inject, InjectionToken} from '@angular/core';\n\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY,\n});\n\n/** @docs-private */\nexport function DIR_DOCUMENT_FACTORY(): Document {\n  return inject(DOCUMENT);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Inject, Injectable, Optional, OnDestroy} from '@angular/core';\nimport {DIR_DOCUMENT} from './dir-document-token';\n\n\nexport type Direction = 'ltr' | 'rtl';\n\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n@Injectable({providedIn: 'root'})\nexport class Directionality implements OnDestroy {\n  /** The current 'ltr' or 'rtl' value. */\n  readonly value: Direction = 'ltr';\n\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  readonly change = new EventEmitter<Direction>();\n\n  constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      const value = bodyDir || htmlDir;\n      this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter,\n  AfterContentInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n@Directive({\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[dir]': 'dir'},\n  exportAs: 'dir',\n})\nexport class Dir implements Directionality, AfterContentInit, OnDestroy {\n  _dir: Direction = 'ltr';\n\n  /** Whether the `value` has been set to its initial value. */\n  private _isInitialized: boolean = false;\n\n  /** Event emitted when the direction changes. */\n  @Output('dirChange') change = new EventEmitter<Direction>();\n\n  /** @docs-private */\n  @Input()\n  get dir(): Direction { return this._dir; }\n  set dir(value: Direction) {\n    const old = this._dir;\n    this._dir = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n\n  /** Current layout direction of the element. */\n  get value(): Direction { return this.dir; }\n\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {Dir} from './dir';\n\n\n@NgModule({\n  exports: [Dir],\n  declarations: [Dir],\n})\nexport class BidiModule { }\n"]}