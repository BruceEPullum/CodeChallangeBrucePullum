{"version":3,"file":"a11y.js","sources":["../../../src/cdk/a11y/aria-describer/aria-reference.ts","../../../src/cdk/a11y/aria-describer/aria-describer.ts","../../../src/cdk/a11y/key-manager/list-key-manager.ts","../../../src/cdk/a11y/key-manager/activedescendant-key-manager.ts","../../../src/cdk/a11y/key-manager/focus-key-manager.ts","../../../src/cdk/a11y/interactivity-checker/interactivity-checker.ts","../../../src/cdk/a11y/focus-trap/focus-trap.ts","../../../src/cdk/a11y/live-announcer/live-announcer-token.ts","../../../src/cdk/a11y/live-announcer/live-announcer.ts","../../../src/cdk/a11y/focus-monitor/focus-monitor.ts","../../../src/cdk/a11y/fake-mousedown.ts","../../../src/cdk/a11y/a11y-module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IDs are deliminated by an empty space, as per the spec. */\nconst ID_DELIMINATOR = ' ';\n\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function addAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  if (ids.some(existingId => existingId.trim() == id.trim())) { return; }\n  ids.push(id.trim());\n\n  el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function removeAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  const filteredIds = ids.filter(val => val != id.trim());\n\n  el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n}\n\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function getAriaReferenceIds(el: Element, attr: string): string[] {\n  // Get string array of all individual ids (whitespace deliminated) in the attribute value\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId} from './aria-reference';\n\n\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n */\nexport interface RegisteredMessage {\n  /** The element containing the message. */\n  messageElement: Element;\n\n  /** The number of elements that reference this message element via `aria-describedby`. */\n  referenceCount: number;\n}\n\n/** ID used for the body container where all messages are appended. */\nexport const MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n\n/** ID prefix used for each created message element. */\nexport const CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n\n/** Attribute given to each host element that is described by a message element. */\nexport const CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map<string, RegisteredMessage>();\n\n/** Container for all registered messages. */\nlet messagesContainer: HTMLElement | null = null;\n\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class AriaDescriber implements OnDestroy {\n  private _document: Document;\n\n  constructor(@Inject(DOCUMENT) _document: any) {\n    this._document = _document;\n  }\n\n  /**\n   * Adds to the host element an aria-describedby reference to a hidden element that contains\n   * the message. If the same message has already been registered, then it will reuse the created\n   * message element.\n   */\n  describe(hostElement: Element, message: string) {\n    if (!this._canBeDescribed(hostElement, message)) {\n      return;\n    }\n\n    if (!messageRegistry.has(message)) {\n      this._createMessageElement(message);\n    }\n\n    if (!this._isElementDescribedByMessage(hostElement, message)) {\n      this._addMessageReference(hostElement, message);\n    }\n  }\n\n  /** Removes the host element's aria-describedby reference to the message element. */\n  removeDescription(hostElement: Element, message: string) {\n    if (!this._canBeDescribed(hostElement, message)) {\n      return;\n    }\n\n    if (this._isElementDescribedByMessage(hostElement, message)) {\n      this._removeMessageReference(hostElement, message);\n    }\n\n    const registeredMessage = messageRegistry.get(message);\n    if (registeredMessage && registeredMessage.referenceCount === 0) {\n      this._deleteMessageElement(message);\n    }\n\n    if (messagesContainer && messagesContainer.childNodes.length === 0) {\n      this._deleteMessagesContainer();\n    }\n  }\n\n  /** Unregisters all created message elements and removes the message container. */\n  ngOnDestroy() {\n    const describedElements =\n        this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n\n    for (let i = 0; i < describedElements.length; i++) {\n      this._removeCdkDescribedByReferenceIds(describedElements[i]);\n      describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n\n    if (messagesContainer) {\n      this._deleteMessagesContainer();\n    }\n\n    messageRegistry.clear();\n  }\n\n  /**\n   * Creates a new element in the visually hidden message container element with the message\n   * as its content and adds it to the message registry.\n   */\n  private _createMessageElement(message: string) {\n    const messageElement = this._document.createElement('div');\n    messageElement.setAttribute('id', `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`);\n    messageElement.appendChild(this._document.createTextNode(message)!);\n\n    this._createMessagesContainer();\n    messagesContainer!.appendChild(messageElement);\n\n    messageRegistry.set(message, {messageElement, referenceCount: 0});\n  }\n\n  /** Deletes the message element from the global messages container. */\n  private _deleteMessageElement(message: string) {\n    const registeredMessage = messageRegistry.get(message);\n    const messageElement = registeredMessage && registeredMessage.messageElement;\n    if (messagesContainer && messageElement) {\n      messagesContainer.removeChild(messageElement);\n    }\n    messageRegistry.delete(message);\n  }\n\n  /** Creates the global container for all aria-describedby messages. */\n  private _createMessagesContainer() {\n    if (!messagesContainer) {\n      const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n\n      // When going from the server to the client, we may end up in a situation where there's\n      // already a container on the page, but we don't have a reference to it. Clear the\n      // old container so we don't get duplicates. Doing this, instead of emptying the previous\n      // container, should be slightly faster.\n      if (preExistingContainer) {\n        preExistingContainer.parentNode!.removeChild(preExistingContainer);\n      }\n\n      messagesContainer = this._document.createElement('div');\n      messagesContainer.id = MESSAGES_CONTAINER_ID;\n      messagesContainer.setAttribute('aria-hidden', 'true');\n      messagesContainer.style.display = 'none';\n      this._document.body.appendChild(messagesContainer);\n    }\n  }\n\n  /** Deletes the global messages container. */\n  private _deleteMessagesContainer() {\n    if (messagesContainer && messagesContainer.parentNode) {\n      messagesContainer.parentNode.removeChild(messagesContainer);\n      messagesContainer = null;\n    }\n  }\n\n  /** Removes all cdk-describedby messages that are hosted through the element. */\n  private _removeCdkDescribedByReferenceIds(element: Element) {\n    // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n    const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n        .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n    element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n  }\n\n  /**\n   * Adds a message reference to the element using aria-describedby and increments the registered\n   * message's reference count.\n   */\n  private _addMessageReference(element: Element, message: string) {\n    const registeredMessage = messageRegistry.get(message)!;\n\n    // Add the aria-describedby reference and set the\n    // describedby_host attribute to mark the element.\n    addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n\n    registeredMessage.referenceCount++;\n  }\n\n  /**\n   * Removes a message reference from the element using aria-describedby\n   * and decrements the registered message's reference count.\n   */\n  private _removeMessageReference(element: Element, message: string) {\n    const registeredMessage = messageRegistry.get(message)!;\n    registeredMessage.referenceCount--;\n\n    removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n  }\n\n  /** Returns true if the element has been described by the provided message ID. */\n  private _isElementDescribedByMessage(element: Element, message: string): boolean {\n    const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n    const registeredMessage = messageRegistry.get(message);\n    const messageId = registeredMessage && registeredMessage.messageElement.id;\n\n    return !!messageId && referenceIds.indexOf(messageId) != -1;\n  }\n\n  /** Determines whether a message can be described on a particular element. */\n  private _canBeDescribed(element: Element, message: string): boolean {\n    return element.nodeType === this._document.ELEMENT_NODE && message != null &&\n        !!`${message}`.trim();\n  }\n\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher: AriaDescriber, _document: any) {\n  return parentDispatcher || new AriaDescriber(_document);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const ARIA_DESCRIBER_PROVIDER = {\n  // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n  provide: AriaDescriber,\n  deps: [\n    [new Optional(), new SkipSelf(), AriaDescriber],\n    DOCUMENT as InjectionToken<any>\n  ],\n  useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  TAB,\n  A,\n  Z,\n  ZERO,\n  NINE,\n} from '@angular/cdk/keycodes';\nimport {debounceTime, filter, map, tap} from 'rxjs/operators';\n\n/** This interface is for items that can be passed to a ListKeyManager. */\nexport interface ListKeyManagerOption {\n  /** Whether the option is disabled. */\n  disabled?: boolean;\n\n  /** Gets the label for this option. */\n  getLabel?(): string;\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends ListKeyManagerOption> {\n  private _activeItemIndex = -1;\n  private _activeItem: T;\n  private _wrap = false;\n  private _letterKeyStream = new Subject<string>();\n  private _typeaheadSubscription = Subscription.EMPTY;\n  private _vertical = true;\n  private _horizontal: 'ltr' | 'rtl' | null;\n\n  /**\n   * Predicate function that can be used to check whether an item should be skipped\n   * by the key manager. By default, disabled items are skipped.\n   */\n  private _skipPredicateFn = (item: T) => item.disabled;\n\n  // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n  private _pressedLetters: string[] = [];\n\n  constructor(private _items: QueryList<T> | T[]) {\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      _items.changes.subscribe((newItems: QueryList<T>) => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stream that emits any time the TAB key is pressed, so components can react\n   * when focus is shifted off of the list.\n   */\n  tabOut: Subject<void> = new Subject<void>();\n\n  /** Stream that emits whenever the active item of the list manager changes. */\n  change = new Subject<number>();\n\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate: (item: T) => boolean): this {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true): this {\n    this._wrap = shouldWrap;\n    return this;\n  }\n\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled: boolean = true): this {\n    this._vertical = enabled;\n    return this;\n  }\n\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\n    this._horizontal = direction;\n    return this;\n  }\n\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval: number = 200): this {\n    if (this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n\n    this._typeaheadSubscription.unsubscribe();\n\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(\n      tap(keyCode => this._pressedLetters.push(keyCode)),\n      debounceTime(debounceInterval),\n      filter(() => this._pressedLetters.length > 0),\n      map(() => this._pressedLetters.join(''))\n    ).subscribe(inputString => {\n      const items = this._getItemsArray();\n\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n\n        if (!this._skipPredicateFn(item) &&\n            item.getLabel!().toUpperCase().trim().indexOf(inputString) === 0) {\n\n          this.setActiveItem(index);\n          break;\n        }\n      }\n\n      this._pressedLetters = [];\n    });\n\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the index specified.\n   * @param index The index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the specified item.\n   * @param item The item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    const previousIndex = this._activeItemIndex;\n\n    this.updateActiveItem(item);\n\n    if (this._activeItemIndex !== previousIndex) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n\n      case DOWN_ARROW:\n        if (this._vertical) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case UP_ARROW:\n        if (this._vertical) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case RIGHT_ARROW:\n        if (this._horizontal === 'ltr') {\n          this.setNextItemActive();\n          break;\n        } else if (this._horizontal === 'rtl') {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case LEFT_ARROW:\n        if (this._horizontal === 'ltr') {\n          this.setPreviousItemActive();\n          break;\n        } else if (this._horizontal === 'rtl') {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      default:\n        // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n        // otherwise fall back to resolving alphanumeric characters via the keyCode.\n        if (event.key && event.key.length === 1) {\n          this._letterKeyStream.next(event.key.toLocaleUpperCase());\n        } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n          this._letterKeyStream.next(String.fromCharCode(keyCode));\n        }\n\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n\n  /** Index of the currently active item. */\n  get activeItemIndex(): number | null {\n    return this._activeItemIndex;\n  }\n\n  /** The active item. */\n  get activeItem(): T | null {\n    return this._activeItem;\n  }\n\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive(): void {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive(): void {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n                                            : this._setActiveItemByDelta(-1);\n  }\n\n  /**\n   * Allows setting the active without any other effects.\n   * @param index Index of the item to be set as active.\n   */\n  updateActiveItem(index: number): void;\n\n  /**\n   * Allows setting the active item without any other effects.\n   * @param item Item to be set as active.\n   */\n  updateActiveItem(item: T): void;\n\n  updateActiveItem(item: any): void {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n\n    this._activeItemIndex = index;\n    this._activeItem = itemArray[index];\n  }\n\n  /**\n   * Allows setting of the activeItemIndex without any other effects.\n   * @param index The new activeItemIndex.\n   * @deprecated Use `updateActiveItem` instead.\n   * @breaking-change 8.0.0\n   */\n  updateActiveItemIndex(index: number): void {\n    this.updateActiveItem(index);\n  }\n\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  private _setActiveItemByDelta(delta: -1 | 1): void {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  private _setActiveInWrapMode(delta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n      const item = items[index];\n\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  private _setActiveInDefaultMode(delta: -1 | 1): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  private _setActiveItemByIndex(index: number, fallbackDelta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    if (!items[index]) {\n      return;\n    }\n\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n\n      if (!items[index]) {\n        return;\n      }\n    }\n\n    this.setActiveItem(index);\n  }\n\n  /** Returns the items as an array. */\n  private _getItemsArray(): T[] {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends ListKeyManagerOption {\n  /** Applies the styles for an active item to this item. */\n  setActiveStyles(): void;\n\n  /** Applies the styles for an inactive item to this item. */\n  setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<Highlightable & T> {\n\n  /**\n   * Sets the active item to the item at the specified index and adds the\n   * active styles to the newly active item. Also removes active styles\n   * from the previously active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item to the specified one and adds the\n   * active styles to the it. Also removes active styles from the\n   * previously active item.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(index: any): void {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\nimport {FocusOrigin} from '../focus-monitor/focus-monitor';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply it's label.\n */\nexport interface FocusableOption extends ListKeyManagerOption {\n  /** Focuses the `FocusableOption`. */\n  focus(origin?: FocusOrigin): void;\n}\n\nexport class FocusKeyManager<T> extends ListKeyManager<FocusableOption & T> {\n  private _origin: FocusOrigin = 'program';\n\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin: FocusOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the specified\n   * index and focuses the newly active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item that is specified and focuses it.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    super.setActiveItem(item);\n\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable} from '@angular/core';\n\n\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\n@Injectable({providedIn: 'root'})\nexport class InteractivityChecker {\n\n  constructor(private _platform: Platform) {}\n\n  /**\n   * Gets whether an element is disabled.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is disabled.\n   */\n  isDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n\n  /**\n   * Gets whether an element is visible for the purposes of interactivity.\n   *\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\n   *\n   * @returns Whether the element is visible.\n   */\n  isVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n\n  /**\n   * Gets whether an element can be reached via Tab key.\n   * Assumes that the element has already been checked with isFocusable.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is tabbable.\n   */\n  isTabbable(element: HTMLElement): boolean {\n    // Nothing is tabbable on the the server 😎\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    const frameElement = getFrameElement(getWindow(element));\n\n    if (frameElement) {\n      const frameType = frameElement && frameElement.nodeName.toLowerCase();\n\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n        return false;\n      }\n\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n        return false;\n      }\n\n    }\n\n    let nodeName = element.nodeName.toLowerCase();\n    let tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe') {\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\n      // investigate the content of the frames.\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      if (!element.hasAttribute('controls')) {\n        // By default an <audio> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK) {\n        // In Blink <audio controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'video') {\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n        // In Trident a <video> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\n        // In Chrome and Firefox <video controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\n      return false;\n    }\n\n    // In iOS the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    return element.tabIndex >= 0;\n  }\n\n  /**\n   * Gets whether an element can be focused by the user.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is focusable.\n   */\n  isFocusable(element: HTMLElement): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n  }\n\n}\n\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window: Window) {\n  try {\n    return window.frameElement as HTMLElement;\n  } catch (e) {\n    return null;\n  }\n}\n\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight ||\n      (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n\n/** Gets whether an element's  */\nfunction isNativeFormElement(element: Node) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n\n/** Gets whether an element is an input element. */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element: HTMLElement): number | null {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node: HTMLElement): Window {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  DoCheck,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\n\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nexport class FocusTrap {\n  private _startAnchor: HTMLElement | null;\n  private _endAnchor: HTMLElement | null;\n  private _hasAttached = false;\n\n  /** Whether the focus trap is active. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    this._enabled = value;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  private _enabled: boolean = true;\n\n  constructor(\n    private _element: HTMLElement,\n    private _checker: InteractivityChecker,\n    private _ngZone: NgZone,\n    private _document: Document,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    if (this._startAnchor && this._startAnchor.parentNode) {\n      this._startAnchor.parentNode.removeChild(this._startAnchor);\n    }\n\n    if (this._endAnchor && this._endAnchor.parentNode) {\n      this._endAnchor.parentNode.removeChild(this._endAnchor);\n    }\n\n    this._startAnchor = this._endAnchor = null;\n  }\n\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors(): boolean {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor!.addEventListener('focus', () => this.focusLastTabbableElement());\n      }\n\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor!.addEventListener('focus', () => this.focusFirstTabbableElement());\n      }\n    });\n\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n\n    return this._hasAttached;\n  }\n\n  /**\n   * Waits for the zone to stabilize, then either focuses the first element that the\n   * user specified, or the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusInitialElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n    });\n  }\n\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n                                                 `[cdkFocusRegion${bound}], ` +\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\n\n    for (let i = 0; i < markers.length; i++) {\n      // @breaking-change 8.0.0\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                     `attribute will be removed in 8.0.0.`, markers[i]);\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                     `will be removed in 8.0.0.`, markers[i]);\n      }\n    }\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusInitialElement(): boolean {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n                                                          `[cdkFocusInitial]`) as HTMLElement;\n\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n      }\n\n      redirectToElement.focus();\n      return true;\n    }\n\n    return this.focusFirstTabbableElement();\n  }\n\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusFirstTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('start');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusLastTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('end');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Checks whether the focus trap has successfuly been attached.\n   */\n  hasAttached(): boolean {\n    return this._hasAttached;\n  }\n\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let children = root.children || root.childNodes;\n\n    for (let i = 0; i < children.length; i++) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let children = root.children || root.childNodes;\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getLastTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Creates an anchor element. */\n  private _createAnchor(): HTMLElement {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    return anchor;\n  }\n\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  private _toggleAnchorTabIndex(isEnabled: boolean, anchor: HTMLElement) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n\n  /** Executes a function when the zone is stable. */\n  private _executeOnStable(fn: () => any): void {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n\n\n/** Factory that allows easy instantiation of focus traps. */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapFactory {\n  private _document: Document;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n  }\n\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n   *     manually by the user.\n   * @returns The created focus trap instance.\n   */\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\n    return new FocusTrap(\n        element, this._checker, this._ngZone, this._document, deferCaptureElements);\n  }\n}\n\n/** Directive for trapping focus within a region. */\n@Directive({\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n})\nexport class CdkTrapFocus implements OnDestroy, AfterContentInit, DoCheck {\n  private _document: Document;\n\n  /** Underlying FocusTrap instance. */\n  focusTrap: FocusTrap;\n\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n  private _previouslyFocusedElement: HTMLElement | null = null;\n\n  /** Whether the focus trap is active. */\n  @Input('cdkTrapFocus')\n  get enabled(): boolean { return this.focusTrap.enabled; }\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n\n  /**\n   * Whether the directive should automatially move focus into the trapped region upon\n   * initialization and return focus to the previous activeElement upon destruction.\n   */\n  @Input('cdkTrapFocusAutoCapture')\n  get autoCapture(): boolean { return this._autoCapture; }\n  set autoCapture(value: boolean) { this._autoCapture = coerceBooleanProperty(value); }\n  private _autoCapture: boolean;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      private _focusTrapFactory: FocusTrapFactory,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this.focusTrap.destroy();\n\n    // If we stored a previously focused element when using autoCapture, return focus to that\n    // element now that the trapped region is being destroyed.\n    if (this._previouslyFocusedElement) {\n      this._previouslyFocusedElement.focus();\n      this._previouslyFocusedElement = null;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n\n    if (this.autoCapture) {\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n      this.focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.focusTrap.hasAttached()) {\n      this.focusTrap.attachAnchors();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n// The token for the live announcer element is defined in a separate file from LiveAnnouncer\n// as a workaround for https://github.com/angular/angular/issues/22559\n\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN =\n    new InjectionToken<HTMLElement | null>('liveAnnouncerElement', {\n      providedIn: 'root',\n      factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n    });\n\n/** @docs-private */\nexport function LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY(): null {\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ContentObserver} from '@angular/cdk/observers';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Provider,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {LIVE_ANNOUNCER_ELEMENT_TOKEN} from './live-announcer-token';\n\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\n\n@Injectable({providedIn: 'root'})\nexport class LiveAnnouncer implements OnDestroy {\n  private readonly _liveElement: HTMLElement;\n  private _document: Document;\n\n  constructor(\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    // We inject the live element and document as `any` because the constructor signature cannot\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n    // a class decorator causes TypeScript to preserve the constructor signature types.\n    this._document = _document;\n    this._liveElement = elementToken || this._createLiveElement();\n  }\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader\n   * @param politeness The politeness of the announcer element\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness: AriaLivePoliteness = 'polite'): Promise<void> {\n    this._liveElement.textContent = '';\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this._liveElement.textContent = message;\n          resolve();\n        }, 100);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n    }\n  }\n\n  private _createLiveElement(): HTMLElement {\n    const elementClass = 'cdk-live-announcer-element';\n    const previousElements = this._document.getElementsByClassName(elementClass);\n    const liveEl = this._document.createElement('div');\n\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n    for (let i = 0; i < previousElements.length; i++) {\n      previousElements[i].parentNode!.removeChild(previousElements[i]);\n    }\n\n    liveEl.classList.add(elementClass);\n    liveEl.classList.add('cdk-visually-hidden');\n\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    this._document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\n}\n\n\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\n@Directive({\n  selector: '[cdkAriaLive]',\n  exportAs: 'cdkAriaLive',\n})\nexport class CdkAriaLive implements OnDestroy {\n  /** The aria-live politeness level to use when announcing messages. */\n  @Input('cdkAriaLive')\n  get politeness(): AriaLivePoliteness { return this._politeness; }\n  set politeness(value: AriaLivePoliteness) {\n    this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n    if (this._politeness === 'off') {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n        this._subscription = null;\n      }\n    } else if (!this._subscription) {\n      this._subscription = this._ngZone.runOutsideAngular(() => {\n        return this._contentObserver\n          .observe(this._elementRef)\n          .subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const element = this._elementRef.nativeElement;\n            this._liveAnnouncer.announce(element.textContent, this._politeness);\n          });\n      });\n    }\n  }\n  private _politeness: AriaLivePoliteness = 'off';\n\n  private _subscription: Subscription | null;\n\n  constructor(private _elementRef: ElementRef, private _liveAnnouncer: LiveAnnouncer,\n              private _contentObserver: ContentObserver, private _ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\n    parentDispatcher: LiveAnnouncer, liveElement: any, _document: any, ngZone: NgZone) {\n  return parentDispatcher || new LiveAnnouncer(liveElement, _document, ngZone);\n}\n\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const LIVE_ANNOUNCER_PROVIDER: Provider = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n    DOCUMENT,\n    NgZone,\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject, Subscription} from 'rxjs';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n */\nexport interface FocusOptions {\n  /** Whether the browser should scroll to the element when it is focused. */\n  preventScroll?: boolean;\n}\n\n\ntype MonitoredElementInfo = {\n  unlisten: Function,\n  checkChildren: boolean,\n  subject: Subject<FocusOrigin>\n};\n\n\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\n@Injectable({providedIn: 'root'})\nexport class FocusMonitor implements OnDestroy {\n  /** The focus origin that the next focus event is a result of. */\n  private _origin: FocusOrigin = null;\n\n  /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n  private _lastFocusOrigin: FocusOrigin;\n\n  /** Whether the window has just been focused. */\n  private _windowFocused = false;\n\n  /** The target of the last touch event. */\n  private _lastTouchTarget: EventTarget | null;\n\n  /** The timeout id of the touch timeout, used to cancel timeout later. */\n  private _touchTimeoutId: number;\n\n  /** The timeout id of the window focus timeout. */\n  private _windowFocusTimeoutId: number;\n\n  /** The timeout id of the origin clearing timeout. */\n  private _originTimeoutId: number;\n\n  /** Map of elements being monitored to their info. */\n  private _elementInfo = new Map<HTMLElement, MonitoredElementInfo>();\n\n  /** A map of global objects to lists of current listeners. */\n  private _unregisterGlobalListeners = () => {};\n\n  /** The number of elements currently being monitored. */\n  private _monitoredElementCount = 0;\n\n  constructor(private _ngZone: NgZone, private _platform: Platform) {}\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: HTMLElement, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: ElementRef<HTMLElement>, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  monitor(element: HTMLElement | ElementRef<HTMLElement>,\n          checkChildren: boolean = false): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return observableOf(null);\n    }\n\n    const nativeElement = this._getNativeElement(element);\n\n    // Check if we're already monitoring this element.\n    if (this._elementInfo.has(nativeElement)) {\n      let cachedInfo = this._elementInfo.get(nativeElement);\n      cachedInfo!.checkChildren = checkChildren;\n      return cachedInfo!.subject.asObservable();\n    }\n\n    // Create monitored element info.\n    let info: MonitoredElementInfo = {\n      unlisten: () => {},\n      checkChildren: checkChildren,\n      subject: new Subject<FocusOrigin>()\n    };\n    this._elementInfo.set(nativeElement, info);\n    this._incrementMonitoredElementCount();\n\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\n    let focusListener = (event: FocusEvent) => this._onFocus(event, nativeElement);\n    let blurListener = (event: FocusEvent) => this._onBlur(event, nativeElement);\n    this._ngZone.runOutsideAngular(() => {\n      nativeElement.addEventListener('focus', focusListener, true);\n      nativeElement.addEventListener('blur', blurListener, true);\n    });\n\n    // Create an unlisten function for later.\n    info.unlisten = () => {\n      nativeElement.removeEventListener('focus', focusListener, true);\n      nativeElement.removeEventListener('blur', blurListener, true);\n    };\n\n    return info.subject.asObservable();\n  }\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: HTMLElement): void;\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: ElementRef<HTMLElement>): void;\n\n  stopMonitoring(element: HTMLElement | ElementRef<HTMLElement>): void {\n    const nativeElement = this._getNativeElement(element);\n    const elementInfo = this._elementInfo.get(nativeElement);\n\n    if (elementInfo) {\n      elementInfo.unlisten();\n      elementInfo.subject.complete();\n\n      this._setClasses(nativeElement);\n      this._elementInfo.delete(nativeElement);\n      this._decrementMonitoredElementCount();\n    }\n  }\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: HTMLElement, origin: FocusOrigin, options?: FocusOptions): void;\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: ElementRef<HTMLElement>, origin: FocusOrigin, options?: FocusOptions): void;\n\n  focusVia(element: HTMLElement | ElementRef<HTMLElement>,\n          origin: FocusOrigin,\n          options?: FocusOptions): void {\n\n    const nativeElement = this._getNativeElement(element);\n\n    this._setOriginForCurrentEventQueue(origin);\n\n    // `focus` isn't available on the server\n    if (typeof nativeElement.focus === 'function') {\n      // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n      (nativeElement as any).focus(options);\n    }\n  }\n\n  ngOnDestroy() {\n    this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n  }\n\n  /** Register necessary event listeners on the document and window. */\n  private _registerGlobalListeners() {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    // On keydown record the origin and clear any touch event that may be in progress.\n    let documentKeydownListener = () => {\n      this._lastTouchTarget = null;\n      this._setOriginForCurrentEventQueue('keyboard');\n    };\n\n    // On mousedown record the origin only if there is not touch target, since a mousedown can\n    // happen as a result of a touch event.\n    let documentMousedownListener = () => {\n      if (!this._lastTouchTarget) {\n        this._setOriginForCurrentEventQueue('mouse');\n      }\n    };\n\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n    // see if a focus happens.\n    let documentTouchstartListener = (event: TouchEvent) => {\n      if (this._touchTimeoutId != null) {\n        clearTimeout(this._touchTimeoutId);\n      }\n      this._lastTouchTarget = event.target;\n      this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n    };\n\n    // Make a note of when the window regains focus, so we can restore the origin info for the\n    // focused element.\n    let windowFocusListener = () => {\n      this._windowFocused = true;\n      this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n    };\n\n    // Note: we listen to events in the capture phase so we can detect them even if the user stops\n    // propagation.\n    this._ngZone.runOutsideAngular(() => {\n      document.addEventListener('keydown', documentKeydownListener, true);\n      document.addEventListener('mousedown', documentMousedownListener, true);\n      document.addEventListener('touchstart', documentTouchstartListener,\n          supportsPassiveEventListeners() ? ({passive: true, capture: true} as any) : true);\n      window.addEventListener('focus', windowFocusListener);\n    });\n\n    this._unregisterGlobalListeners = () => {\n      document.removeEventListener('keydown', documentKeydownListener, true);\n      document.removeEventListener('mousedown', documentMousedownListener, true);\n      document.removeEventListener('touchstart', documentTouchstartListener,\n          supportsPassiveEventListeners() ? ({passive: true, capture: true} as any) : true);\n      window.removeEventListener('focus', windowFocusListener);\n\n      // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n      clearTimeout(this._windowFocusTimeoutId);\n      clearTimeout(this._touchTimeoutId);\n      clearTimeout(this._originTimeoutId);\n    };\n  }\n\n  private _toggleClass(element: Element, className: string, shouldSet: boolean) {\n    if (shouldSet) {\n      element.classList.add(className);\n    } else {\n      element.classList.remove(className);\n    }\n  }\n\n  /**\n   * Sets the focus classes on the element based on the given focus origin.\n   * @param element The element to update the classes on.\n   * @param origin The focus origin.\n   */\n  private _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n    const elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      this._toggleClass(element, 'cdk-focused', !!origin);\n      this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n      this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n      this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n      this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n  }\n\n  /**\n   * Sets the origin and schedules an async function to clear it at the end of the event queue.\n   * @param origin The origin to set.\n   */\n  private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._ngZone.runOutsideAngular(() => {\n      this._origin = origin;\n      // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n      // tick after the interaction event fired. To ensure the focus origin is always correct,\n      // the focus origin will be determined at the beginning of the next tick.\n      this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n    });\n  }\n\n  /**\n   * Checks whether the given focus event was caused by a touchstart event.\n   * @param event The focus event to check.\n   * @returns Whether the event was caused by a touch.\n   */\n  private _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, 'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    let focusTarget = event.target;\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n\n  /**\n   * Handles focus events on a registered element.\n   * @param event The focus event.\n   * @param element The monitored element.\n   */\n  private _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n      return;\n    }\n\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    let origin = this._origin;\n    if (!origin) {\n      if (this._windowFocused && this._lastFocusOrigin) {\n        origin = this._lastFocusOrigin;\n      } else if (this._wasCausedByTouch(event)) {\n        origin = 'touch';\n      } else {\n        origin = 'program';\n      }\n    }\n\n    this._setClasses(element, origin);\n    this._emitOrigin(elementInfo.subject, origin);\n    this._lastFocusOrigin = origin;\n  }\n\n  /**\n   * Handles blur events on a registered element.\n   * @param event The blur event.\n   * @param element The monitored element.\n   */\n  _onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const elementInfo = this._elementInfo.get(element);\n\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget))) {\n      return;\n    }\n\n    this._setClasses(element);\n    this._emitOrigin(elementInfo.subject, null);\n  }\n\n  private _emitOrigin(subject: Subject<FocusOrigin>, origin: FocusOrigin) {\n    this._ngZone.run(() => subject.next(origin));\n  }\n\n  private _incrementMonitoredElementCount() {\n    // Register global listeners when first element is monitored.\n    if (++this._monitoredElementCount == 1) {\n      this._registerGlobalListeners();\n    }\n  }\n\n  private _decrementMonitoredElementCount() {\n    // Unregister global listeners when last element is unmonitored.\n    if (!--this._monitoredElementCount) {\n      this._unregisterGlobalListeners();\n      this._unregisterGlobalListeners = () => {};\n    }\n  }\n\n  private _getNativeElement(element: HTMLElement | ElementRef<HTMLElement>): HTMLElement {\n    return element instanceof ElementRef ? element.nativeElement : element;\n  }\n}\n\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\n@Directive({\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n})\nexport class CdkMonitorFocus implements OnDestroy {\n  private _monitorSubscription: Subscription;\n  @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _focusMonitor: FocusMonitor) {\n    this._monitorSubscription = this._focusMonitor.monitor(\n        this._elementRef,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._monitorSubscription.unsubscribe();\n  }\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport function FOCUS_MONITOR_PROVIDER_FACTORY(\n    parentDispatcher: FocusMonitor, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport const FOCUS_MONITOR_PROVIDER = {\n  // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n  provide: FocusMonitor,\n  deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n  useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus} from './focus-monitor/focus-monitor';\nimport {CdkTrapFocus} from './focus-trap/focus-trap';\nimport {CdkAriaLive} from './live-announcer/live-announcer';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule, ObserversModule],\n  declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n  exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n})\nexport class A11yModule {}\n"]}